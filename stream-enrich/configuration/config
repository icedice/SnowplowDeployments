# Copyright (c) 2013-2016 Snowplow Analytics Ltd. All rights reserved.
#
# This program is licensed to you under the Apache License Version 2.0, and
# you may not use this file except in compliance with the Apache License
# Version 2.0.  You may obtain a copy of the Apache License Version 2.0 at
# http://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Apache License Version 2.0 is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.  See the Apache License Version 2.0 for the specific language
# governing permissions and limitations there under.

enrich {
  streams {
    in {
      raw = ${kinesis_input_good}
    }

    out {
      enriched = ${kinesis_output_good}
      bad = ${kinesis_output_bad}

      # This is not the best partition key, but it is guaranteed to be non-null.
      partitionKey = "user_ipaddress"
    }

    sourceSink {
      enabled = kinesis

      region = "eu-west-1"

      # Use the default AWS credentials provider chain.
      aws {
        accessKey = "default"
        secretKey = "default"
      }
      
      # Maximum number of records to get from Kinesis per call to GetRecords
      maxRecords = 10000

      # Note: This only effects the first run of this application on a stream.
      initialPosition = "TRIM_HORIZON"

      # Minimum and maximum backoff periods
      # - Units = Milliseconds
      backoffPolicy = {
        minBackoff = 100
        maxBackoff = 2000
      }
    }

    # After enrichment, are accumulated in a buffer before being sent to Kinesis.
    # The buffer is emptied whenever:
    # - the number of stored records reaches record-limit or
    # - the combined size of the stored records reaches byte-limit or
    # - the time in milliseconds since it was last emptied exceeds time-limit when
    #   a new event enters the buffer
    buffer {
      byteLimit = 10000000
      recordLimit = 500
      timeLimit = 2000
    }

    # "app-name" is used for a DynamoDB table to maintain stream state.
    # "app-name" is used as the Kafka consumer group ID.
    # You can set it automatically using: "SnowplowKinesisEnrich-$\\{enrich.streams.in.raw\\}"
    appName = ${app_name}
  }
}
